
%%  function call: x=ch_nav_equ_local_tan(x,u,dt)
% x         Current navigation state [position  velocity, attitude (Quaternion, b2n)]
% u         Measured inertial quantities [Specific force (m/s^2), Angular velocity (rad/s)]
% dt        Sampling period (s)
% gn      Graivity

function x = ch_nav_equ_local_tan(x ,u, dt, gN)
old_v = x(4:6);

sf =u(1:3); 
%sf = sf + 0.5*cross(u(4:6)*dt, sf);

%  姿态结算
gyr = u(4:6);

%x(7:10) = ch_qintg(x(7:10), gyr, dt);

Cb2n = ch_q2m(x(7:10));
theta = gyr*dt;

Cm2mp = eye(3) + ch_askew(theta);

Cb2n = Cb2n * Cm2mp;

% 截断误差，正交化
c1 = Cb2n(1,:);
c2 = Cb2n(2,:);
c3 = Cb2n(3,:);
d12 = dot(c1, c2);
d23 = dot(c2, c3);
d13 = dot(c1, c3);
c1 = c1 - 0.5*d12*c2 - 0.5*d13*c3;
c2 = c2 - 0.5*d12*c2 - 0.5*d23*c3;
c3 = c3 - 0.5*d13*c1 - 0.5*d23*c2;
Cb2n = [c1; c2]


x(7:10) = ch_m2q(Cb2n);

%x(7:10) = ch_qnormlz(x(7:10));

% 速度解算
q = x(7:10);
sf = ch_qmulv(q, sf);
sf = sf + gN;
x(4:6) = old_v + dt *sf;

% 位置解算
x(1:3) = x(1:3) + (old_v + x(4:6)) *dt/2;

end

